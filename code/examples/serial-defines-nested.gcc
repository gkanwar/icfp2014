LDC 0 ; Symbol plus-one init for main
LDC 0 ; Symbol func init for main
LDF 5 ; Load main_$body$
AP 2 ; Call main_$body$
RTN ; main return

LDF 14 ; Define plus-one
ST 0 0 ; End define plus-one
LDF 21 ; Define func
ST 0 1 ; End define func
LDC 10 ; 
LDC 5 ; 
LD 0 1 ; Var func
AP 2 ; Func call func
RTN ; main_$body$ return

LDF 17 ; Load func0_$body$
AP 0 ; Call func0_$body$
RTN ; func0 return

LD 1 0 ; Var x
LDC 1 ; 
ADD ; 
RTN ; func0_$body$ return

LDC 0 ; Symbol inc init for func1
LDF 25 ; Load func1_$body$
AP 1 ; Call func1_$body$
RTN ; func1 return

LD 1 0 ; Define inc
LD 2 0 ; Var plus-one
AP 1 ; Func call plus-one
ST 0 0 ; End define inc
LD 0 0 ; Var inc
LD 1 1 ; Var b
MUL ; 
RTN ; func1_$body$ return

