(define get-map-val
  (lambda (world-map row col)
    (list-ref (list-ref world-map row) col)))

(define check-row-in-bounds
  (lambda (world-map row)
    (if (< 0 row)
        0
        (if (>= row (list-size world-map))
            0
            1))))

(define check-col-in-bounds
  (lambda (world-map col)
    (if (< 0 col)
        0
        (if (>= col (list-size (car world-map)))
            0
            1))))

(define step
  (lambda (state world)
    (cons (+ state 1) 1)))

(define init
  (lambda (THUNK)
    (cons 0 step)))

(init)
