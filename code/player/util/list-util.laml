;;;; -*- mode: scheme -*-
;; Empty list
(define nil 0)
;; Null doesn't actually check against nil, because for a real list
;; we'll get a tag mismatch. Just assumes that a non-pair value is a
;; null list.
(define null?
  (lambda (l)
    (atom l)))

(define list-ref
  (lambda (l index)
    (if (= index 0)
        (car l)
        (list-ref (cdr l) (- index 1)))))

(define list-size
  (lambda (l)
    (if (null? l)
        0
        (+ 1 (list-size (cdr l))))))

(define tuple-size
  (lambda (t)
    (if (atom (cdr t))
        ;; Last pair of the tuple: 2 elts
        2
        (+ 1 (tuple-size (cdr t))))))

(define map
  (lambda (func l)
    (if (null? l)
        nil
        (cons (func (car l)) (map func (cdr l))))))
